package day16.com.ict.edu;

public class Ex04_innerclass {
	// 내부 클래스 : 클래스안에 클래스가 존재한다
	// 종류 : member, local, static, anonymous
	// 1. member
	//		외부 클래스 {
	//			외부멤버필드
	//			생성자
	//			외부멤버메서드
	//			내부클래스{
	//			내부멤버필드
	//			생성자
	//			내부멤버메서드
	//			}
	//		}
	
	// 특징 : 내부클래스에서는 외부클래스이 멤버들을 마음대로 사용한다 ( 상속과 비슷하다)
	//			단, 상속은 private 접근이 안되지만 내부클래스에서는 접근 가능하다
	//		외부클래스를 통해서만 내부클래스를 생성할 수 있다 (내부클래스만 별도로 생성불가)
	
	// 2. local : 외부클래스 메서드안에 내부클래스가 존재한다
	//				외부클래스가 지역변수처럼 사용
	//				외부클래스의 메서드가 호출될때 생성 할 수 있다
	//				지역변수처럼 외부클래스의 해당 메서드가 종료되면 내부클래스도 지워진다
	//		외부 클래스 {
	//			외부멤버필드
	//			생성자
	//			외부멤버메서드{
	//				내부클래스{
	//					내부멤버필드
	//					생성자
	//					내부멤버메서드
	//			}
	//		}
	//	}
	
	// 3. static 내부클래스 : 구조는 member 내부클래스와 같다
	//						내부클래스의 멤버 변수는 static 사용불가
	//						어쩔 수 없이 내부클래스의 멤버면수를 static으로 사용할때
	//						내부클래스를 static 내부클래스로 만든다
	//						접근방법은 static 접근방법을 사용한다(클래스이름.변수)
	//						내부클래스를 별도로 생성 할 수 있다
//	외부 클래스 {
//			외부멤버필드
//			생성자
//			외부멤버메서드
//			static내부클래스{
//			static내부멤버필드
//			생성자
//			내부멤버메서드
//			}
//		}
	
	// 4. anonymous : 전의된 이름이 없는 클래스
	//					다시 호출 할 수 없다 ( 일회용으로 한번만 사용하고 다시 사용불가)
	
}
